/*
 *  NAVIGATION OVERLAY
 *  Menu
 *
 */

.navigation-overlay {
  overflow: scroll;
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 100;
  display: block;
  height: 100vh;
  transition: background-image .2s ease-in-out;
  display: flex;

  .menu-items {
    position: relative;
    z-index: 11;
    clear: both;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    margin-left: 40px;
    padding: 0;

    @media screen and (min-width: $bp-tablet) {
      margin-left: 68px;
    }

    @media screen and (min-width: $bp-medium) {
      margin-left: 128px;
    }
  }
}

.navigation-overlay-bg {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  opacity: 0;
  transition: opacity .2s linear;

  &.hovered {
    opacity: 1;
  }
}

.navigation-overlay.home,
.navigation-overlay-bg-home {
  @include page-background-colour(home);
}

.navigation-overlay.what-we-do,
.navigation-overlay-bg-what-we-do {
  @include page-background-colour(work);
}

.navigation-overlay.events,
.navigation-overlay-bg-events {
  @include page-background-colour(events);
}

.navigation-overlay.blog,
.navigation-overlay-bg-blog {
  @include page-background-colour(blog);
}

.navigation-overlay.join-us,
.navigation-overlay-bg-join-us {
  @include page-background-colour(join);
}


$menu-transition-bg-duration: .2s;
$menu-transition-item-duration: .2s;
$menu-transition-item-delay: .15s;

.modal.menu {
  transition-duration: $menu-transition-bg-duration;

  .navigation-overlay-link {
    opacity: 0;
    transform: translateY(10px);
    transition: all $menu-transition-item-duration ease-out;
  }

  &.show {
    .navigation-overlay-link {
      opacity: 1;
      transform: translateY(0);

      &:nth-child(1) {
        transition-delay: $menu-transition-bg-duration + $menu-transition-item-delay;
      }
      &:nth-child(2) {
        transition-delay: $menu-transition-bg-duration + ($menu-transition-item-delay * 2);
      }
      &:nth-child(3) {
        transition-delay: $menu-transition-bg-duration + ($menu-transition-item-delay * 3);
      }
      &:nth-child(4) {
        transition-delay: $menu-transition-bg-duration + ($menu-transition-item-delay * 4);
      }
      &:nth-child(5) {
        transition-delay: $menu-transition-bg-duration + ($menu-transition-item-delay * 5);
      }
      &:nth-child(6) {
        transition-delay: $menu-transition-bg-duration + ($menu-transition-item-delay * 6);
      }
      &:nth-child(7) {
        transition-delay: $menu-transition-bg-duration + ($menu-transition-item-delay * 7);
      }
    }
  }

  &.hide {
    transition-delay: .32s;

    .navigation-overlay-link:hover {
      &:before {
        background-color: white;
        transition: background-color .15s linear;
      }
    }
    .navigation-overlay-link:not(:hover) {
      opacity: 0;
      transition: opacity .15s linear .15s;
    }
  }
}

.navigation-overlay-link {
  position: relative;
  color: white;
  width: 100%;
  list-style: none;
  @extend .h3;
  font-size: 36px;
  line-height: 1.6em;

  @media screen and (min-width: $bp-small) {
    font-size: 50px;
  }

  @media screen and (min-width: $bp-large) {
    font-size: 60px;
  }

  &:before {
    content: "";
    position: absolute;
    width: 8px;
    height: 8px;
    left: -16px;
    top: 50%;
    transform: translateY(-50%);
    border-radius: 50%;
  }

  @media screen and (min-width: $bp-medium) {
    &:before {
      width: 13px;
      height: 13px;
      left: -28px;
    }
  }

  @media screen and (min-width: $bp-large) {
    &:before {
      width: 15px;
      height: 15px;
      left: -30px;
    }
  }

  &:hover {
    &:before {
      border: 2px solid white;
    }
  }

  &.selected {
    &:before {
      background-color: white;
    }
  }



  /* Each menu item has a different colour as defined here */
  // $i: 1;
  // @each $colour in $rain, $pot, $blu, $softPassion, $honey {
  //   &:nth-child(#{$i}) {
  //     color: #{$colour};
  //     &.selected a {
  //       border-color: #{$colour};
  //     }
  //   }
  //   $i: $i + 1;
  // }


}
